<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.nature.blog.mapper.UserMapper">
    <insert id="saveOne">
        insert into tb_user values (#{id}, #{userName}, #{password}, #{roles}, #{avatar}, #{email}, #{sign}, #{state}, #{regIp}, #{loginIp}, #{createTime}, #{updateTime})
    </insert>
    <select id="findOneByUserName" resultType="NatureUser">
        select * from tb_user where user_name = #{username}
    </select>
    <select id="findOneByEmail" resultType="NatureUser">
        select * from tb_user where email = #{email}
    </select>
    <update id="updateUserPasswordByEmail">
        update tb_user set password = #{password} where email = #{email}
    </update>
    <select id="findOneById" resultType="NatureUser">
        select * from tb_user where id = #{id}
    </select>
    <update id="deleteStateById">
        update tb_user set state = '0' where id = #{id}
    </update>
    <select id="findAllNoPassword" resultType="NatureUser">
        select id, user_name, roles, avatar, email, sign, state, reg_ip, login_ip, create_time, update_time
            from tb_user
            <where>
                <if test="userName != null and userName != ''">
                    user_name like concat('%',#{userName},'%')
                </if>
                <if test="email != null and email != ''">
                    and email = #{email}
                </if>
            </where>
            order by create_time DESC
    </select>
    <update id="updateEmailById">
        update tb_user set email = #{email} where id = #{id}
    </update>
    <update id="updatePartUser">
        update tb_user set user_name = #{userName}, avatar = #{avatar}, sign = #{sign} where id = #{id}
    </update>
    <select id="findPartOneById" resultType="NatureUser">
        select id, user_name, roles, avatar, sign, state, create_time, update_time from tb_user where id = #{id}
    </select>
    <update id="updateTimeAndIp">
        update tb_user set update_time = #{updateTime}, login_ip = #{loginIp} where  id = #{id}
    </update>
    <update id="refreshUserByState">
        update tb_user set state = '1' where id = #{id}
    </update>
    <update id="resetPassword">
        update tb_user set password = #{password} where id = #{userId}
    </update>
    <select id="getUserCount" resultType="Integer">
        select count(*) from tb_user
    </select>
</mapper>
